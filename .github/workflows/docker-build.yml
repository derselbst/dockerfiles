name: Build Docker Images

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

env:
  REGISTRY: ${{ vars.DOCKER_REGISTRY || 'ghcr.io' }}
  REGISTRY_USERNAME: ${{ vars.DOCKER_USERNAME || github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}
  DOCKER_BUILD_EXPORT_LEGACY: "true"

jobs:
  build-docker-images:
    strategy:
      matrix:
        include:
          - dockerfile: fluidsynth-devel
            os: ubuntu-latest
            platforms: linux/amd64
          - dockerfile: qt6.suse
            os: ubuntu-latest
            platforms: linux/amd64
          - dockerfile: qt6.ubuntu
            os: ubuntu-latest
            platforms: linux/amd64
          - dockerfile: qt6.win
            os: windows-2022
            platforms: windows/amd64
      fail-fast: false

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: runner.os != 'Windows'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.dockerfile }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ github.sha }}

      - name: Build and push Docker image (Linux)
        if: runner.os != 'Windows'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          docker build -f ${{ matrix.dockerfile }} -t ghcr.io/derselbst/${{ matrix.dockerfile }}:latest .
          docker push ghcr.io/derselbst/${{ matrix.dockerfile }}:latest

      - name: Image build summary
        run: |
          echo "‚úÖ Successfully built and pushed Docker image for: ${{ matrix.dockerfile }}"
          echo "üè∑Ô∏è  Tags: ${{ steps.meta.outputs.tags }}"
          echo "üì¶ Registry: ${{ env.REGISTRY }}"
